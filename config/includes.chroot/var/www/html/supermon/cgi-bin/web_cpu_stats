#!/bin/bash
# Display CPU stats as a web page
# /cgi-bin/cpu_stats
echo -e "Content-type: text/html\n\n"
echo "<html>"
echo "<head>"
echo "<title>Raspberry Pi CPU Stats</title>"
echo "</head>"
echo "<body>"
echo -e "<p style=\"text-decoration:underline\">Current CPU stats</p>"
echo "<p>"
for info in /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_*
do 
  if [[ ${info} == *"cpuinfo_cur_freq"* ]]; then continue; fi
  echo -n $(basename "${info}")" = "
  result=`cat ${info}`
  if [[ ${info} != *"transition"* ]]; then
    echo "$((result / 1000)) MHz."
  else
    echo $result
  fi
echo "<br>"
done
echo -n "cpu frequency ondemand up threshold = "
if [ -s /sys/devices/system/cpu/cpufreq/ondemand/up_threshold ]; then
     cat /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
fi
echo "<br>"
echo -n "cpu frequency scaling governor = "
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo -n "<p>Current CPU Temperature = "
PTEMP=`cat /sys/class/thermal/thermal_zone0/temp` 
PTEMP=`expr $PTEMP / 1000`
if [ "$PTEMP" -le "50" ]
	then
          echo -en "<span style=\"background-color:green;\">$PTEMP"
elif [ "$PTEMP" -le "60" ]
        then
          echo -en "<span style=\"background-color:yellow;\">$PTEMP"
else
	  echo -en "<span style=\"background-color:red;\">$PTEMP"
fi
echo -n "C / "
FTEMP=`expr 9 '*' $PTEMP / 5 + 32`
echo -n "$FTEMP"
echo "F"
echo "</span></p>"
#echo -n "CPU Trip Point Temperature - "
#PTRIP=`cat /sys/class/thermal/thermal_zone0/trip_point_0_temp`
#PTRIP=`expr $PTRIP / 1000`
#echo -n $PTRIP
#echo "C"
echo "<p>"
echo Core `/opt/vc/bin/vcgencmd measure_volts core`
echo "<br>"
echo sdram core `/opt/vc/bin/vcgencmd measure_volts sdram_c`
echo "<br>"
echo sdram I/O `/opt/vc/bin/vcgencmd measure_volts sdram_i`
echo "<br>"
echo sdram PHY `/opt/vc/bin/vcgencmd measure_volts sdram_p`
echo "<br>"
echo `grep -m 1 Bogo /proc/cpuinfo` X 4 CORES
echo "</body>"
echo "</html>"


